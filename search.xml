<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>POI读取大数据量Excel出现Java heap space</title>
      <link href="/2019/12/21/20191221excel/"/>
      <url>/2019/12/21/20191221excel/</url>
      
        <content type="html"><![CDATA[<blockquote><p><font color="red">该篇文章处理的Excel格式为xlsx格式</font></p></blockquote><p>前几天，在读取一个数据量在28W多行的Excel的时候，在加载Excel的时候，报出了OutOfMemoryError：Java heap space的异常，出现这个问题的原因是使用POI读取Excel的时候，会创建大量的String对象，并且空的表格数据也会创建String对象，需要把所有的Excel一下全部加载到内存才会进行接下来的操作，就导致出现了内存溢出</p><p>原始读取代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">FileInputStream in = <span class="keyword">new</span> FileInputStream(<span class="string">"xlsx路径"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">XSSFWorkbook wk = <span class="keyword">new</span> XSSFWorkbook(in);</span></pre></td></tr></table></figure><p>之后查找了大量的博客，最后在stackoverflow上看到了一个问题类似的贴子，经过尝试，代码不会出现内存溢出的问题，但是又出现了另外一个问题</p><p>采用Excel StreamingReader的方式进行加载，它不会一次性的加载到内存，而是使用一种流的方式，循环着加载<br>修改后的代码：<br>使用下面的代码之前，需要先引入一个jar包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.monitorjbl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xlsx-streamer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.monitorjbl.xlsx.StreamingReader;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readExcel</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">FileInputStream in = <span class="keyword">new</span> FileInputStream(<span class="string">"xlsx路径"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        Workbook wk = StreamingReader.builder()</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">                .rowCacheSize(<span class="number">100</span>)  <span class="comment">//缓存到内存中的行数，默认是10</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">                .bufferSize(<span class="number">4096</span>)  <span class="comment">//读取资源时，缓存到内存的字节大小，默认是1024</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">                .open(in);  <span class="comment">//打开资源，必须，可以是InputStream或者是File，注意：只能打开XLSX格式的文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        Sheet sheet = wk.getSheetAt(<span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (Row row : sheet) &#123;<span class="comment">//遍历所有的行</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">"开始遍历第"</span> + row.getRowNum() + <span class="string">"行数据："</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            <span class="comment">//遍历所有的列</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">for</span> (Cell cell : row) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">                System.out.print(cell.getStringCellValue() + <span class="string">" "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">            System.out.println(<span class="string">" "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>解决完了上一个问题后，又报出了java.lang.NoSuchFieldError：RAW_XML_FILE_HEADER的异常，之后Askru网站上查找到一个解决方案，大多数由于POI版本太低，需要POI版本在3.16+版本才不会出错，我将3.16版本升级为3.17之后就没有任何问题了</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></pre></td></tr></table></figure><p>参考链接：<br>[1] stackoverflow解决内存溢出：<a href="https://stackoverflow.com/questions/11891851/how-to-load-a-large-xlsx-file-with-apache-poi" target="_blank" rel="noopener">https://stackoverflow.com/questions/11891851/how-to-load-a-large-xlsx-file-with-apache-po</a></p><p>[2] Askru解决RAW_XML_FILE_HEADER：<a href="https://askvoprosy.com/voprosy/nosuchfielderror-when-reading-excel-sheet-in-java" target="_blank" rel="noopener">https://askvoprosy.com/voprosy/nosuchfielderror-when-reading-excel-sheet-in-java</a></p>]]></content>
      
      
      <categories>
          
          <category> Excel处理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零搭建hexo私人博客</title>
      <link href="/2019/12/08/createhexo/"/>
      <url>/2019/12/08/createhexo/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇文章主要讲解，依托于github，搭建一个属于自己的炫酷博客网站<br>如果觉得自己可以，可直接参照hexo官网<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo官方文档</a>，否则还是按部就班看我接下来的内容</p></blockquote><h3 id="1、下载安装nodejs-之前如果下载并安装完毕跳过"><a href="#1、下载安装nodejs-之前如果下载并安装完毕跳过" class="headerlink" title="1、下载安装nodejs(之前如果下载并安装完毕跳过)"></a><font color="#1E90FF">1、下载安装nodejs(之前如果下载并安装完毕跳过)</font></h3><p><font size="3"><strong>注意：hexo需要的nodejs版本需不低于 8.6，建议使用 Node.js 10.0 及以上版本</strong></font></p><blockquote><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs官方下载地址</a></p></blockquote><p> <font size="3">1. 点击上方链接，根据自己电脑环境，下载对应版本，本人win10，下载的是64bit的.msi版本<br> <font size="3">2. 双击刚才下载的文件进行安装，全程除了修改安装路径，其他不需勾选，完成<br> <font size="3">3. 验证是否安装成功，win+R打开cmd命令行窗口，输入node -v回车，输出版本表示安装成功，可继续输入npm -v回车也会输出npm源的版本<br> <font size="3">4. 设置npm的下载源，默认的下载的速度太慢，我们可以设置为国内的源，如淘宝，打开cmd窗口，输入下方指令回车，即设置成功</font></font></font></font></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry http://registry.npm.taobao.org/</span></pre></td></tr></table></figure><p><font size="3">到这一步，我们的nodejs就安装完毕了。。。</font></p><h3 id="2、下载安装配置git，创建一个自己的github账号，并在github上配置一下ssh-之后出一篇git文章，先自行百度"><a href="#2、下载安装配置git，创建一个自己的github账号，并在github上配置一下ssh-之后出一篇git文章，先自行百度" class="headerlink" title="2、下载安装配置git，创建一个自己的github账号，并在github上配置一下ssh(之后出一篇git文章，先自行百度)"></a><font color="#1E90FF">2、下载安装配置git，创建一个自己的github账号，并在github上配置一下ssh(之后出一篇git文章，先自行百度)</font></h3><h3 id="3、安装hexo"><a href="#3、安装hexo" class="headerlink" title="3、安装hexo"></a><font color="#1E90FF">3、安装hexo</font></h3><blockquote><p>可同时参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">nodejs官网</a>，左方目录选择概述下部分内容</p></blockquote><p><font size="3">1.  <strong>cmd命令行</strong>窗口中执行</font></p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span></pre></td></tr></table></figure><p><font size="3">2. 在本地任意盘下新建一个文件夹(用英文命名)</font></p><p><font size="3">3. <strong>进入新建的文件夹</strong>，右键选择Git Bash Here</font></p><p><font size="3">4. 执行 </font></p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">hexo init 文件夹名(任意一个英文名称)</span></pre></td></tr></table></figure><p><font size="3">5. cd进入4创建的文件夹名</font></p><p><font size="3">6. 输入<strong>npm install</strong>回车</font></p><p><font size="3">7. 执行<strong>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</strong>回车（ctrl+c本地终止，之后本地改动后需要本地测试，直接进入到4新建的文件夹下的git命令行中执行hexo s即可，如果有问题先执行hexo clean清理一下缓存）</font></p><p><font size="3">8. 打开浏览器访问localhost:4000，初始化完毕</font></p><p><font size="3">9. 现在只是在本地启动，接下来我们和github进行关联</font></p><h3 id="4、github配置-前提已经注册了自己的github账户并登录进去"><a href="#4、github配置-前提已经注册了自己的github账户并登录进去" class="headerlink" title="4、github配置(前提已经注册了自己的github账户并登录进去)"></a><font color="#1E90FF">4、github配置(前提已经注册了自己的github账户并登录进去)</font></h3><p><font size="3">1. 创建一个仓库new Repository<br><font size="3">2. 填写Repository name的时候，一定和前面的owner名字一致<br>    <img src="/images/createhexo/newRes.png" alt="按照图示创建"><br><font size="3">3. 点击create就完成了仓库的创建</font></font></font></p><h3 id="5、避免之后中文乱码问题"><a href="#5、避免之后中文乱码问题" class="headerlink" title="5、避免之后中文乱码问题"></a><font color="#1E90FF">5、避免之后中文乱码问题</font></h3><p>  <font size="3">在步骤3中的第4步创建的文件夹下，有一个_config.yml文件，打开修改language: zh-CN，注意空格</font></p><h3 id="6、将博客推送到github"><a href="#6、将博客推送到github" class="headerlink" title="6、将博客推送到github"></a><font color="#1E90FF">6、将博客推送到github</font></h3><blockquote><p>可参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">nodejs官网</a>，左方目录选择GitHub Pages下部分内容</p></blockquote><p><font size="3">1. 在步骤3中的第4步创建的文件夹下，右键进入git bash here界面，执行下面这条命令</font></p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></figure><p><font size="3">2. 在_config.yml中继续配置下面内容</font></p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">deploy:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  type: git</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;&lt;username&gt;&#x2F;&lt;project&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  # example, https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexojs.github.io</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  branch: master</span></pre></td></tr></table></figure><p>   <font size="3">改一下repo的内容就行，这里的username就是你的github的owner名字，比如我的就是repo: <a href="https://github.com/liuleiStu/liuleiStu.github.io" target="_blank" rel="noopener">https://github.com/liuleiStu/liuleiStu.github.io</a></font></p><p><font size="3">3. 继续在git界面下执行<strong>hexo clean &amp;&amp; hexo deploy</strong>命令，会出现输入github用户名和密码，然后就上传成功了</font></p><p><font size="3">4. 浏览器访问username.github.io，比如我的就是liuleiStu.github.io</font></p><h3 id="7、挑选炫酷的hexo主题"><a href="#7、挑选炫酷的hexo主题" class="headerlink" title="7、挑选炫酷的hexo主题"></a><font color="#1E90FF">7、挑选炫酷的hexo主题</font></h3><p><font size="3"> 1. 进入<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">nodejs官网</a>，上方选择主题<br><font size="3"> 2. 这里可以挑选自己喜欢的样式，找到自己喜欢的主题后，在该主题中找到github仓库，按照仓库的步骤进行配置即可<br><font size="3"> 3. 比如进入hexo主题，选择这个主题<br> <img src="/images/createhexo/hexozhuti.png" alt="enter description here"><br><font size="3"> 4. 在主题中寻找github地址<br> <img src="/images/createhexo/zhutisouye.png" alt="enter description here"><br><font size="3">5. 点击进入该github地址，找到存放hexo主题的仓库，点击进入<br> <img src="/images/createhexo/zhutidizhi.png" alt="enter description here"><br><font size="3"> 6. 就会看到下面的界面<br> <img src="/images/createhexo/anzhuang.png" alt="enter description here"><br><font size="3"> 7. 按照步骤进行配置即可</font></font></font></font></font></font></font></p><h3 id="8、发布文章到自己的博客-之后更新"><a href="#8、发布文章到自己的博客-之后更新" class="headerlink" title="8、发布文章到自己的博客(之后更新)"></a><font color="#1E90FF">8、发布文章到自己的博客(之后更新)</font></h3>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
